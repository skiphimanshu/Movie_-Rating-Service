package com.movie.service.services;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.movie.service.entity.Movie;
import com.movie.service.entity.Rating;
import com.movie.service.exception.ResourceNotFoundException;
import com.movie.service.repository.MovieRepository;

@Service
public class MovieServiceImpl implements MovieService{
	
	@Autowired
	private MovieRepository movieRepository;
	
	@Autowired
	private  RestTemplate restTemplate;
	
	
	@Override
	public Movie createMovie(Movie movie) {
		
		String randomId = UUID.randomUUID().toString();
		movie.setId(randomId);
		return this.movieRepository.save(movie);
	}

	@Override
	public List<Movie> getAllMovie() {
		
		return this.movieRepository.findAll();
	}

	@Override
	public Movie getMovieById(String id) {
		
		Movie movie = movieRepository.findById(id).orElseThrow(() -> new ResourceNotFoundException("Movie Not Found"));
		Rating[] movieratings = restTemplate.getForObject("http://localhost:8482/rating/movie-rating/"+movie.getId(), Rating [].class);
		List<Rating> list_ratngs = Arrays.stream(movieratings).toList();
	
		if(list_ratngs == null ) {
			movie.setRating(null);
		}else {
			movie.setRating(list_ratngs);
		}
		
		return movie;
		
	}

}
